{"version":3,"file":"component---node-modules-gatsby-theme-paste-src-templates-posts-tsx-db58635a7f5bccc5b6b8.js","mappings":"8KAoBA,IATkB,SAAC,GAAkC,IAAhCA,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MACvBC,GAAiBC,EAAAA,EAAAA,KAAjBD,aAEFE,GAAYC,EAAAA,EAAAA,GAASN,GACrBO,GAAmBD,EAAAA,EAAAA,GAASH,GAElC,OAAOE,GAAaE,EAAmB,gBAAC,EAAAC,EAAD,CAAaR,MAAOK,GAAaE,EAAkBN,IAAKA,IAAU,gBAAC,EAAAQ,EAAD,CAAaC,IAAI,2BAA2BT,IAAKA,EAAKC,MAAOA,EAA7D,qG,wICQ3G,EAXiB,SAAC,GAAqB,IAAnBS,EAAkB,EAAlBA,KAClB,OACE,gBAAC,KAAD,CAAKT,MAAM,QACT,gBAAC,KAAD,CAAOU,YAAY,WAAWC,QAAQ,WACpC,gBAAC,IAAD,CAAWb,MAAOW,EAAKG,YAAYd,MAAOC,IAAKU,EAAKG,YAAYC,MAAOb,MAAO,MAC9E,gBAAC,IAAD,eAAUc,KAAI,SAAWL,EAAKM,OAAOC,KAAQC,QAASR,EAAKQ,SAAaR,EAAKG,iBCcrF,EAjBiB,SAAC,GAAkC,IAAhCM,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,WACzB,OACE,gBAAC,KAAD,KACE,gBAAC,IAAD,CAAMC,SAAU,EAAC,GAAM,GAAO,GAAQC,OAAQ,CAAC,UAAW,UAAW,YAClEH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,gBAAC,IAAD,CAAQC,KAAM,CAAC,GAAI,EAAG,GAAIC,IAAKF,EAAKR,OAAOC,MACzC,gBAAC,EAAD,CAAUP,KAAMc,EAAME,IAAKF,EAAKR,OAAOC,YAI7C,gBAAC,IAAD,CAAMU,SAAS,UAAUC,cAAc,UACrC,gBAAC,KAAeR,O,qFCSxB,IApBiB,SAAC,GAA6D,IAA3DL,EAA0D,EAA1DA,KAAMD,EAAoD,EAApDA,MAAOe,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,KAAMb,EAAqB,EAArBA,QACvD,OACE,gBAAC,KAAD,CAAOP,YAAY,WAAWC,QAAQ,WACpC,gBAAC,KAAD,CAAWoB,GAAIjB,GACb,gBAAC,KAAD,CAAMkB,GAAG,KAAKC,SAAS,cACpBpB,IAGL,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAMmB,GAAG,QAAQE,MAAM,gBAAgBD,SAAS,cAC7CL,IAGL,gBAAC,KAAD,CAAgBO,KAAK,aAAaC,WAAYP,IAC9C,gBAAC,KAAD,CAAgBM,KAAK,OAAOC,WAAYN,IACxC,gBAAC,IAAD,KAAYb,M,uECLlB,UAdsB,SAAC,GAAkC,IAAhCoB,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YACvBpB,EAAQmB,EAAKE,OAAOrB,MAClBC,EAAemB,EAAfnB,WAEFN,EAAmC,IAA3BM,EAAWqB,iBAAoBC,EAA/B,gBAA2DtB,EAAWqB,YAAtE,OAAwFrB,EAAWuB,WAEjH,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAK7B,MAAOA,EAAO8B,YAAW,8BAC9B,gBAAC,IAAD,CAAUzB,MAAOA,EAAOC,WAAYA,O","sources":["webpack://gatsby-theme-paste-starter/./node_modules/gatsby-theme-paste/src/components/post-image.tsx","webpack://gatsby-theme-paste-starter/./node_modules/gatsby-theme-paste/src/components/post-card.tsx","webpack://gatsby-theme-paste-starter/./node_modules/gatsby-theme-paste/src/components/post-list.tsx","webpack://gatsby-theme-paste-starter/./node_modules/gatsby-theme-paste/src/components/post-meta.tsx","webpack://gatsby-theme-paste-starter/./node_modules/gatsby-theme-paste/src/templates/posts.tsx"],"sourcesContent":["import React from \"react\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\";\n\nimport { useSiteMetadata } from \"../queries/siteMetadata\";\nimport { PostFrontmatter } from \"../queries/post\";\n\ntype Props = Pick<PostFrontmatter, \"image\"> & {\n  alt: string;\n  width?: number;\n};\n\nconst PostImage = ({ image, alt, width }: Props) => {\n  const { defaultImage } = useSiteMetadata();\n\n  const postImage = getImage(image);\n  const defaultPostImage = getImage(defaultImage);\n\n  return postImage || defaultPostImage ? <GatsbyImage image={postImage || defaultPostImage} alt={alt} /> : <StaticImage src=\"../../static/default.jpg\" alt={alt} width={width} />;\n};\n\nexport default PostImage;\n","import React from \"react\";\n\nimport { Box } from \"@twilio-paste/box\";\nimport { Stack } from \"@twilio-paste/stack\";\n\nimport { Post } from \"../queries/post\";\n\nimport PostImage from \"./post-image\";\nimport PostMeta from \"./post-meta\";\n\ntype Props = {\n  post: Pick<Post, \"frontmatter\" | \"fields\" | \"excerpt\">;\n};\n\nconst PostCard = ({ post }: Props) => {\n  return (\n    <Box width=\"100%\">\n      <Stack orientation=\"vertical\" spacing=\"space30\">\n        <PostImage image={post.frontmatter.image} alt={post.frontmatter.title} width={600} />\n        <PostMeta link={`/blog/${post.fields.slug}`} excerpt={post.excerpt} {...post.frontmatter} />\n      </Stack>\n    </Box>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\n\nimport { Box } from \"@twilio-paste/box\";\nimport { Flex } from \"@twilio-paste/flex\";\nimport { Grid, Column } from \"@twilio-paste/grid\";\n\nimport { Post } from \"../queries/post\";\n\nimport { Pagination, PaginationProps } from \"./common\";\nimport PostCard from \"./post-card\";\n\ntype Props = {\n  edges: { node: Pick<Post, \"frontmatter\" | \"fields\" | \"excerpt\"> }[];\n  pagination: PaginationProps;\n};\n\nconst PostList = ({ edges, pagination }: Props) => {\n  return (\n    <Box>\n      <Grid vertical={[true, false, false]} gutter={[\"space30\", \"space60\", \"space60\"]}>\n        {edges.map(({ node }) => (\n          <Column span={[12, 6, 6]} key={node.fields.slug}>\n            <PostCard post={node} key={node.fields.slug} />\n          </Column>\n        ))}\n      </Grid>\n      <Flex paddingY=\"space60\" hAlignContent=\"center\">\n        <Pagination {...pagination} />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default PostList;\n","import React from \"react\";\n\nimport { Box } from \"@twilio-paste/box\";\nimport { Stack } from \"@twilio-paste/stack\";\nimport { Paragraph } from \"@twilio-paste/paragraph\";\nimport { Text } from \"@twilio-paste/text\";\n\nimport { PasteLink, PostGroupPills } from \"./common\";\nimport { ExtendedPostGroups, Page, PageFrontmatter } from \"../queries/post\";\n\ntype Props = ExtendedPostGroups &\n  Pick<PageFrontmatter, \"date\" | \"title\"> &\n  Pick<Page, \"excerpt\"> & {\n    link: string;\n  };\n\nconst PostMeta = ({ link, title, date, categories, tags, excerpt }: Props) => {\n  return (\n    <Stack orientation=\"vertical\" spacing=\"space40\">\n      <PasteLink to={link}>\n        <Text as=\"h2\" fontSize=\"fontSize50\">\n          {title}\n        </Text>\n      </PasteLink>\n      <Box>\n        <Text as=\"small\" color=\"colorTextWeak\" fontSize=\"fontSize20\">\n          {date}\n        </Text>\n      </Box>\n      <PostGroupPills type=\"categories\" postGroups={categories} />\n      <PostGroupPills type=\"tags\" postGroups={tags} />\n      <Paragraph>{excerpt}</Paragraph>\n    </Stack>\n  );\n};\n\nexport default PostMeta;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { PageContext, PaginatedPageContext, PostData } from \"../types\";\nimport { Post } from \"../queries/post\";\n\nimport Layout from \"../components/layout\";\nimport PostList from \"../components/post-list\";\nimport SEO from \"../components/seo\";\n\ntype Props = PostData<Pick<Post, \"frontmatter\" | \"fields\" | \"excerpt\">> & PaginatedPageContext & PageContext<\"category\", string>;\n\nconst PostsTemplate = ({ data, pageContext }: Props) => {\n  const edges = data.allMdx.edges;\n  const { pagination } = pageContext;\n\n  const title = pagination.currentPage === 1 ? undefined : `Posts - Page ${pagination.currentPage} of ${pagination.totalPages}`;\n\n  return (\n    <Layout>\n      <SEO title={title} description={`Shows a list of all posts`} />\n      <PostList edges={edges} pagination={pagination} />\n    </Layout>\n  );\n};\n\nexport default PostsTemplate;\n\nexport const pageQuery = graphql`\n  query ($skip: Int!, $limit: Int!) {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }, limit: $limit, skip: $skip, filter: { frontmatter: { type: { eq: \"post\" } } }) {\n      ...PostSummary\n    }\n  }\n`;\n"],"names":["image","alt","width","defaultImage","useSiteMetadata","postImage","getImage","defaultPostImage","G","S","src","post","orientation","spacing","frontmatter","title","link","fields","slug","excerpt","edges","pagination","vertical","gutter","map","node","span","key","paddingY","hAlignContent","date","categories","tags","to","as","fontSize","color","type","postGroups","data","pageContext","allMdx","currentPage","undefined","totalPages","description"],"sourceRoot":""}